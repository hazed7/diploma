name: 'Setup Cache'
description: 'Sets up Node.js, pnpm & caching'

inputs:
  node-version:
    description: 'Node.js version'
    required: false
    default: '20'
  pnpm-version:
    description: 'pnpm version'
    required: false
    default: '8'
  install-deps:
    description: 'Whether to install dependencies'
    required: false
    default: 'true'
  production-only:
    description: 'Whether to install only production dependencies'
    required: false
    default: 'false'

runs:
  using: "composite"
  steps:
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}

    - name: Install pnpm
      uses: pnpm/action-setup@v3
      with:
        version: ${{ inputs.pnpm-version }}
        run_install: false

    - name: Get pnpm store directory
      id: pnpm-cache
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

    - name: Setup pnpm cache
      uses: actions/cache@v4
      with:
        path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Check if lockfile exists
      id: check-lockfile
      shell: bash
      run: |
        if [ -f "pnpm-lock.yaml" ]; then
          echo "exists=true" >> $GITHUB_OUTPUT
        else
          echo "exists=false" >> $GITHUB_OUTPUT
        fi

    - name: Install dependencies with lockfile
      if: inputs.install-deps == 'true' && steps.check-lockfile.outputs.exists == 'true'
      shell: bash
      run: |
        if [ "${{ inputs.production-only }}" == "true" ]; then
          pnpm install --frozen-lockfile --prod
        else
          pnpm install --frozen-lockfile
        fi

    - name: Install dependencies without lockfile
      if: inputs.install-deps == 'true' && steps.check-lockfile.outputs.exists == 'false'
      shell: bash
      run: |
        if [ "${{ inputs.production-only }}" == "true" ]; then
          pnpm install --no-frozen-lockfile --prod
        else
          pnpm install --no-frozen-lockfile
        fi

    - name: Cache build
      uses: actions/cache@v4
      with:
        path: |
          dist
          node_modules/.cache
        key: ${{ runner.os }}-build-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-build-
