services:
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: lms-app-dev
    restart: unless-stopped
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3000:3000'
      - '9229:9229'
    depends_on:
      - mongodb
      - redis
    environment:
      - NODE_ENV=development
      - PORT=3000
      - MONGO_URI=mongodb://${MONGO_ROOT_USER}:${MONGO_ROOT_PASSWORD}@mongodb:27017/${MONGO_DATABASE}?authSource=admin
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - JWT_ACCESS_SECRET=${JWT_ACCESS_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - JWT_ACCESS_EXPIRATION=${JWT_ACCESS_EXPIRATION}
      - JWT_REFRESH_EXPIRATION=${JWT_REFRESH_EXPIRATION}
    networks:
      - backend-network

  mongodb:
    image: mongo:latest
    container_name: mongodb-dev
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    ports:
      - '27017:27017'
    volumes:
      - mongodb_data_dev:/data/db
    networks:
      - backend-network

  redis:
    image: redis:alpine
    container_name: redis-dev
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - '6379:6379'
    volumes:
      - redis_data_dev:/data
    networks:
      - backend-network

volumes:
  mongodb_data_dev:
  redis_data_dev:

networks:
  backend-network:
    driver: bridge
